1.When would you want to use a remote repository rather than keeping all
your work local?

It could be useful when you are working with others, when using a different
device than usual, or when making a quick change to a file that could be faster
than accessing it locally.

2.Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

The changes might not have been ready to commit, it will help avoid merge
conflicts, and other people may be working on the same remote, so it could
cause confusion if pulls are made automatically and you are not ready for them.

3.Describe the differences  between forks, clones, and branches.
When would you use one instead of another?

fork - do this when you want to copy someone else's repo, but not push changes
to it, or at least not continually, and any changes you make will be pushed
to your fork, not the original replace clone - do this when you want to copy
a repo to your machine locally, you will often be able to push changes to it
branch - make a branch when you are working on a new feature to a repo that
you have forked or cloned. Changes can be committed to the branch without
changing the original repo until you merge the branch back into the
original master.

4.What is the benefit of having a copy of the last known state of the
remote stored locally?

It can prevent future merge conflicts, can help you avoid making code
changes that others have already done.

5.How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

Git is a little hard for people to understand, so another interface could be
easier.  I could use something like google docs, but it would not necessarily
allowmultiple versions at once.  Having to keep track of versions and notes on
those versions could get messy if I tried to devise my own system.  Also, loss
of change history can be a problem.
